%********************* Méthode de la section dorée pour la minimisation unidimensionnelle ******************
clc;
disp('*************************************************************');
disp('************   Algorithme de la Section Dorée   *************');
disp('************            OPTIMISATION            *************');
disp('*************************************************************');

%--------------------------------------------------------------------------
%--------------------------Initialisation des parametres-------------------
c1 = (3 - sqrt(5))/2;
c2 = 1 - c1;

load y;
disp([' Epsilon  =',num2str(epsilon)]);
disp([' Ro =',num2str(ro)]);
disp([' F(X) =',y]);
disp('*************************************************************');
disp('                                                             ');

%--------------------------------------------------------------------------



%------------------Recherche d'un intervalle initial-----------------------
if subs(y,x,ro) < subs(y,x,0) 
    u0 = 0;
    u1 = u0 + ro;
   
    if subs(y,x,u1) < subs(y,x,u0)
        u2 = u1 + ro;   
    end
    while subs(y,x,u2) < subs(y,x,u1)
        u0 = u1;
        u1 = u2;
        u2 = u1 + ro;          
    end
    a = u0;
    b = u2;
else 
    a = 0;
    b = ro;
end
binf = a;
bsup = b;
fbinf=subs(y,binf);
fbsup=subs(y,bsup);
savefile = 'intervalle.mat';
binf;
bsup;
fbinf;
fbsup;
save(savefile,'binf','bsup','fbinf',')

save binf;
save bsup;

save fbinf;
save fbsup;
graphe;
tracef;
disp('*************************************************************');
disp('          Recherche d''un intervalle intitial                ');
disp('*************************************************************');
disp([' Intervalle initial  =[',num2str(a),'  ',num2str(b),']']);
disp('*************************************************************');
disp('                                                             ');
disp('                                                             ');
%--------------------------------------------------------------------------
% Etape 7 :
   K=0;
%--------------------------------------------------------------------------



%------------------Reduction de l'intervalle initial-----------------------
L = b - a;%Etapes 8
 disp('----------   Réduction de l''intervalle initial  ------------');
while (L > epsilon) 
    load y;
    K=K+1;
    v = a + c1*L;
    w = a + c2*L;
    % Etape 11 :
    if subs(y,x,v) <= subs(y,x,w)
        b = w;
    else
        a = v;
    end
   binf = a;
bsup = b;
save binf;
save bsup;
fbinf=subs(y,binf);
fbsup=subs(y,bsup);
save fbinf;
save fbsup;

tracef;
    L = (c2)*L;
    disp(['           Nouvelle Intervalle =[',num2str(a),'  ',num2str(b),']']);
end


 disp('----------   Réduction de l''intervalle Terminée  ------------');
 disp('                                                             ');
if K>500
    errordlg('Algorithme divergeant!!!!!  Reparametrer l''Algorithme','Erreur');
     break;
 
end
%--------------------------------------------------------------------------
% Etape 12 : 
load y;
xmin = (a + b)/2;
FaupointXmin=subs(y,x,xmin);
disp('*************************************************************');
disp('                       Point minimum trouvé                  ');
disp('*************************************************************');
disp('                        Résultats :                          ');
disp('*************************************************************');
disp([' Le nombre d''itérations  =',num2str(K)]);
disp([' Le point minimum =',num2str(xmin)]);
disp([' F(Xmin) =',num2str(FaupointXmin)]);
disp('*************************************************************');
disp('  ');
disp('  ');
[xmatlab,fmatlab] =fminbnd (y, a, b);
disp('**************************************************************')
disp('  Résultats Avec la fonction de Matlab :"fminbnd"          ')
disp('**************************************************************')
disp([' Le point minimum =',num2str(xmatlab)]);
disp([' F(Xmin) =',num2str(fmatlab)]);
disp('**************************************************************');


%**************************************************************************
%        Sauvgarde des résultats pour les afficher dans l'interface
%**************************************************************************
savefile = 'resultat.mat';
xmin;
FaupointXmin;
K;
save(savefile,'xmin','FaupointXmin','K')
%**************************************************************************

%**************************************************************************
savefile = 'resultatunidim.mat';
xmatlab;
save(savefile,'xmatlab','fmatlab')
%**************************************************************************
